{"version":3,"sources":["components/Tab/TabItem.tsx","components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["TabItem","tabItem","selectedTabId","onTabSelected","isActive","id","className","classNames","href","onClick","title","Tabs","tabs","map","allTabs","content","App","useState","setSelectedTabId","setTitle","setContent","useEffect","tab","find","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAqB,SAAC,GAI5B,IAHLC,EAGI,EAHJA,QACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,GAAkB,OAAPH,QAAO,IAAPA,OAAA,EAAAA,EAASI,MAAOH,EAEjC,OACE,oBACE,UAAQ,MACRI,UAAWC,IAAW,CAAE,YAAaH,IAFvC,SAIE,mBACEI,KAAI,kBAAMP,QAAN,IAAMA,OAAN,EAAMA,EAASI,IACnB,UAAQ,UACRI,QAAS,WACP,OAAQL,GAAD,OAAaH,QAAb,IAAaA,KAASI,GAAKF,EAAcF,EAAQI,IAAM,MAJlE,gBAOGJ,QAPH,IAOGA,OAPH,EAOGA,EAASS,WCnBLC,EAAkB,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMV,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cACrD,OACE,qBAAKG,UAAU,gBAAf,SACE,oCACGM,QADH,IACGA,OADH,EACGA,EAAMC,KAAI,SAAAZ,GAAO,OAChB,cAAC,EAAD,CAEEA,QAASA,EACTC,cAAeA,EACfC,cAAeA,GAHVF,EAAQI,YCTZS,EAAiB,CAC5B,CAAET,GAAI,QAASK,MAAO,QAASK,QAAS,eACxC,CAAEV,GAAI,QAASK,MAAO,QAASK,QAAS,eACxC,CAAEV,GAAI,QAASK,MAAO,QAASK,QAAS,gBAG7BC,EAAU,WACrB,MAAeC,mBAAgBH,GAAxBF,EAAP,oBACA,EAA0CK,mBAAiB,IAA3D,mBAAOf,EAAP,KAAsBgB,EAAtB,KACA,EAA0BD,mBAAS,IAAnC,mBAAOP,EAAP,KAAcS,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOF,EAAP,KAAgBK,EAAhB,KAEAC,qBAAU,WACHnB,GACHgB,EAAiB,SAGnB,IAAMI,EAAMV,EAAKW,MAAK,SAAAtB,GAAO,OAAIA,EAAQI,KAAOH,MAAkBU,EAAK,GAEvEO,EAAQ,OAACG,QAAD,IAACA,OAAD,EAACA,EAAKZ,OACdU,EAAU,OAACE,QAAD,IAACA,OAAD,EAACA,EAAKP,WACf,CAACb,IAMJ,OACE,sBAAKI,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,4BAEGI,KAGH,sBAAK,UAAQ,gBAAb,UACE,cAAC,EAAD,CACEE,KAAMA,EACNV,cAAeA,EACfC,cAfc,SAACE,GACrBa,EAAiBb,MAgCb,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGS,WC7DXS,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1c91a3fe.chunk.js","sourcesContent":["import { FC } from 'react';\nimport classNames from 'classnames';\nimport { Tab } from '../../types';\n\ntype Props = {\n  tabItem: Tab | undefined;\n  selectedTabId: string;\n  onTabSelected: (id: string) => void;\n};\n\nexport const TabItem: FC<Props> = ({\n  tabItem,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const isActive = tabItem?.id === selectedTabId;\n\n  return (\n    <li\n      data-cy=\"Tab\"\n      className={classNames({ 'is-active': isActive })}\n    >\n      <a\n        href={`#${tabItem?.id}`}\n        data-cy=\"TabLink\"\n        onClick={() => {\n          return !isActive && tabItem?.id ? onTabSelected(tabItem.id) : null;\n        }}\n      >\n        {tabItem?.title}\n      </a>\n    </li>\n  );\n};\n","import { FC } from 'react';\nimport { Tab } from '../../types';\nimport { TabItem } from '../Tab/TabItem';\n\ntype Props = {\n  tabs: Tab[] | undefined;\n  selectedTabId: string;\n  onTabSelected: (id: string) => void;\n};\n\nexport const Tabs: FC<Props> = ({ tabs, selectedTabId, onTabSelected }) => {\n  return (\n    <div className=\"tabs is-boxed\">\n      <ul>\n        {tabs?.map(tabItem => (\n          <TabItem\n            key={tabItem.id}\n            tabItem={tabItem}\n            selectedTabId={selectedTabId}\n            onTabSelected={onTabSelected}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import { FC, useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tab } from './types';\nimport { Tabs } from './components/Tabs/Tabs';\n\nexport const allTabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: FC = () => {\n  const [tabs] = useState<Tab[]>(allTabs);\n  const [selectedTabId, setSelectedTabId] = useState<string>('');\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n\n  useEffect(() => {\n    if (!selectedTabId) {\n      setSelectedTabId('tab-1');\n    }\n\n    const tab = tabs.find(tabItem => tabItem.id === selectedTabId) || tabs[0];\n\n    setTitle(tab?.title);\n    setContent(tab?.content);\n  }, [selectedTabId]);\n\n  const onTabSelected = (id: string): void => {\n    setSelectedTabId(id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is\n        {title}\n      </h1>\n\n      <div data-cy=\"TabsComponent\">\n        <Tabs\n          tabs={tabs}\n          selectedTabId={selectedTabId}\n          onTabSelected={onTabSelected}\n        />\n        {/* <div className=\"tabs is-boxed\">\n          <ul>\n            <li className=\"is-active\" data-cy=\"Tab\">\n              <a href=\"#tab-1\" data-cy=\"TabLink\">Tab 1</a>\n            </li>\n\n            <li data-cy=\"Tab\">\n              <a href=\"#tab-2\" data-cy=\"TabLink\">Tab 2</a>\n            </li>\n\n            <li data-cy=\"Tab\">\n              <a href=\"#tab-3\" data-cy=\"TabLink\">Tab 3</a>\n            </li>\n          </ul>\n        </div> */}\n\n        <div className=\"block\" data-cy=\"TabContent\">\n          {content}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}